1 - Creare DROPLET DIGITALOCEAN
Problemi di memoria su digitalocean
https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-16-04
How To Add Swap Space on Ubuntu 
########################################################################################################################################
2 - Installazione di TOMCAT
https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-8-on-ubuntu-16-04
3 - Installazione di Java
sudo apt-get update
sudo apt-get update
sudo apt-get install default-jre
4 - Creare un Tomcat User
sudo groupadd tomcat
sudo useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat
5 - Installazione di Tomcat
Scarica tomcat e scompattare il conentuto in una cratella tomcat sotto /op/tomcat
6 - settaggio permessi
sudo chgrp -R tomcat /opt/tomcat
sudo chmod -R g+r conf
sudo chmod g+x conf
sudo chown -R tomcat webapps/ work/ temp/ logs/
7 - creare a systemd Service File
sudo update-java-alternatives -l #dove java è installato
sudo nano /etc/systemd/system/tomcat.service
#incollare il contenuto seguente

[Unit]
Description=Apache Tomcat Web Application Container
After=network.target

[Service]
Type=forking

Environment=JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre
Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid
Environment=CATALINA_HOME=/opt/tomcat
Environment=CATALINA_BASE=/opt/tomcat
Environment='CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'
Environment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'

ExecStart=/opt/tomcat/bin/startup.sh
ExecStop=/opt/tomcat/bin/shutdown.sh

User=tomcat
Group=tomcat
UMask=0007
RestartSec=10
Restart=always

[Install]
WantedBy=multi-user.target

sudo systemctl daemon-reload
sudo systemctl start tomcat
sudo systemctl status tomcat

#se non funziona rivedere i permessi
cd /opt && sudo chown -R tomcat tomcat/
sudo chmod -R +x tomcat/ #sostiture la dir di tomcat

8 - firewall e settaggio server
sudo ufw allow 8080
sudo systemctl enable tomcat

9 - configurare l'interfaccia
sudo nano /opt/tomcat/conf/tomcat-users.xml
#aggiungere user e password
<tomcat-users . . .>
    <user username="admin" password="password" roles="manager-gui,admin-gui"/>
</tomcat-users>
#per abilitare la gestione delle funzionalità e delle webapps
sudo nano /opt/tomcat/webapps/manager/META-INF/context.xml
sudo nano /opt/tomcat/webapps/host-manager/META-INF/context.xml
#disabilitare 
<Context antiResourceLocking="false" privileged="true" >
  <!--<Valve className="org.apache.catalina.valves.RemoteAddrValve"
         allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" />-->
</Context>

sudo systemctl restart tomcat

10 - web interface
http://server_domain_or_IP:8080
#######################################################################################################################################
INSTALLAZIONE DI GEOSERVER
scaricare geoserver e copiare il file geoserver.war nella cartella webapps di tomcat
########################################################################################################################################
INSTALLAZIONE DI POSTGIS
sudo apt && sudo apt upgrade
sudo apt install postgresql postgresql-contrib
sudo apt install postgis
#per loggarsi come utente postgres
sudo -u postgres psql
#per logout
\q
#di default postgis crea un utente postgres con database associato postgres; per settare una password digitare
ALTER USER postgres PASSWORD '';
#abilitare le connessioni in entrata
sudo nano /etc/postgresql/10/main postgresql.conf
MODIFICARE LISTEN ADDRESSESS -> ELEIMINARE IL # E INSERIRE '*'
sudo nano /etc/postgresql/10/main pg_hba.conf
SOTTO IPV4 INSERIRE L'IP DELLE CONNESSIONI IN ENTRATA. PER PERMTTERE QUALSIASI CONNESSIONE DIGITARE
host all all 0.0.0.0/0 md5
sudo service postgresql restart

########################################################################################################################################
Abilitare WFS su leaflet:
è necessario abilitare jquery

var owsrootUrl = 'http://167.71.61.106:8080/geoserver/realbania/ows';
var defaultParameters = {
  service: 'WFS',
  version: '1.0.0',
  request: 'GetFeature',
  typeName: 'realbania:road_kill',
  maxFeatures: '50',
  outputFormat: 'application/json',
};
		
var parameters = L.Util.extend(defaultParameters);
var URL = owsrootUrl + L.Util.getParamString(parameters);
		
$.ajax({
		url: URL,
		success: function (data) {
		//create a new geojson layer
		var geojson = new L.geoJson(data, {
		// apply a style
		style: {"color":"#ff7800","weight":10},
		// and bind a popup showing the data and photo for each feature extracted.
		}).addTo(map);
		}
});

#se si hanno problemi di visualizzazione modificando il seguente file al seguente path
#var/lib/tomcat7/webapps/geoserver/WEB-INF/web.xml aggiugendo il seguente codice:

<filter>
  <filter-name>CorsFilter</filter-name>
  <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
  <init-param>
    <param-name>cors.allowed.origins</param-name>
    <param-value>*</param-value>
  </init-param>
</filter>
<filter-mapping>
  <filter-name>CorsFilter</filter-name>
  <url-pattern>/*</url-pattern>
</filter-mapping>

#Salvare il file ed eseguire un restart di Tomcat.

